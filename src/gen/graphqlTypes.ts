// Sourcecode generated by graphql-codegen. DO NOT EDIT!
/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K]
}
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>
}
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>
}
export type MakeEmpty<
  T extends { [key: string]: unknown },
  K extends keyof T,
> = { [_ in K]?: never }
export type Incremental<T> =
  | T
  | {
      [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never
    }
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string }
  String: { input: string; output: string }
  Boolean: { input: boolean; output: boolean }
  Int: { input: number; output: number }
  Float: { input: number; output: number }
  AWSDate: { input: any; output: any }
  AWSDateTime: { input: any; output: any }
  AWSEmail: { input: any; output: any }
  AWSIPAddress: { input: any; output: any }
  AWSJSON: { input: any; output: any }
  AWSPhone: { input: any; output: any }
  AWSTime: { input: any; output: any }
  AWSTimestamp: { input: any; output: any }
  AWSURL: { input: any; output: any }
}

export type AddressInput = {
  addressLine1: Scalars['String']['input']
  addressLine2?: InputMaybe<Scalars['String']['input']>
  city: Scalars['String']['input']
  country: Scalars['String']['input']
  postalCode: Scalars['String']['input']
  state: Scalars['String']['input']
}

export type BankAccountFundingSource = CommonFundingSource &
  CommonObject & {
    __typename?: 'BankAccountFundingSource'
    authorization: SignedAuthorizationText
    bankAccountType: BankAccountType
    createdAtEpochMs: Scalars['Float']['output']
    currency: Scalars['String']['output']
    id: Scalars['ID']['output']
    institutionLogo?: Maybe<SealedAttribute>
    institutionName: SealedAttribute
    last4: Scalars['String']['output']
    owner: Scalars['ID']['output']
    state: FundingSourceState
    transactionVelocity?: Maybe<TransactionVelocity>
    updatedAtEpochMs: Scalars['Float']['output']
    version: Scalars['Int']['output']
  }

export enum BankAccountType {
  Checking = 'CHECKING',
  Other = 'OTHER',
  Savings = 'SAVINGS',
}

export type CardCancelRequest = {
  id: Scalars['ID']['input']
  keyId?: InputMaybe<Scalars['String']['input']>
}

export type CardProvisionRequest = {
  alias?: InputMaybe<Scalars['String']['input']>
  billingAddress?: InputMaybe<AddressInput>
  cardHolder: Scalars['String']['input']
  clientRefId: Scalars['String']['input']
  currency: Scalars['String']['input']
  fundingSourceId: Scalars['ID']['input']
  keyRingId: Scalars['ID']['input']
  metadata?: InputMaybe<SealedAttributeInput>
  ownerProofs: Array<Scalars['ID']['input']>
}

export enum CardState {
  Closed = 'CLOSED',
  Failed = 'FAILED',
  Issued = 'ISSUED',
  Suspended = 'SUSPENDED',
}

export enum CardType {
  Credit = 'CREDIT',
  Debit = 'DEBIT',
  Other = 'OTHER',
  Prepaid = 'PREPAID',
}

export type CardUpdateRequest = {
  alias?: InputMaybe<Scalars['String']['input']>
  billingAddress?: InputMaybe<AddressInput>
  cardHolder?: InputMaybe<Scalars['String']['input']>
  expectedVersion?: InputMaybe<Scalars['Int']['input']>
  id: Scalars['ID']['input']
  keyId?: InputMaybe<Scalars['String']['input']>
  metadata?: InputMaybe<SealedAttributeInput>
}

export type CommonFundingSource = {
  createdAtEpochMs: Scalars['Float']['output']
  currency: Scalars['String']['output']
  id: Scalars['ID']['output']
  owner: Scalars['ID']['output']
  state: FundingSourceState
  transactionVelocity?: Maybe<TransactionVelocity>
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export type CommonObject = {
  createdAtEpochMs: Scalars['Float']['output']
  id: Scalars['ID']['output']
  owner: Scalars['ID']['output']
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export type CompleteFundingSourceRequest = {
  completionData: Scalars['ID']['input']
  id: Scalars['ID']['input']
  updateCardFundingSource?: InputMaybe<Scalars['Boolean']['input']>
}

export type CreatePublicKeyInput = {
  algorithm: Scalars['String']['input']
  keyFormat?: InputMaybe<KeyFormat>
  keyId: Scalars['String']['input']
  keyRingId: Scalars['String']['input']
  publicKey: Scalars['String']['input']
}

export type CreditCardFundingSource = CommonFundingSource &
  CommonObject & {
    __typename?: 'CreditCardFundingSource'
    cardType: CardType
    createdAtEpochMs: Scalars['Float']['output']
    currency: Scalars['String']['output']
    id: Scalars['ID']['output']
    last4: Scalars['String']['output']
    network: CreditCardNetwork
    owner: Scalars['ID']['output']
    state: FundingSourceState
    transactionVelocity?: Maybe<TransactionVelocity>
    updatedAtEpochMs: Scalars['Float']['output']
    version: Scalars['Int']['output']
  }

export enum CreditCardNetwork {
  Amex = 'AMEX',
  Diners = 'DINERS',
  Discover = 'DISCOVER',
  Jcb = 'JCB',
  Mastercard = 'MASTERCARD',
  Other = 'OTHER',
  Unionpay = 'UNIONPAY',
  Visa = 'VISA',
}

export type CurrencyAmount = {
  __typename?: 'CurrencyAmount'
  amount: Scalars['String']['output']
  currency: Scalars['String']['output']
}

export type CurrencyVelocity = {
  __typename?: 'CurrencyVelocity'
  currency: Scalars['String']['output']
  velocity: Array<Scalars['String']['output']>
}

export type DateRangeInput = {
  endDateEpochMs: Scalars['Float']['input']
  startDateEpochMs: Scalars['Float']['input']
}

export type DisableUser = {
  __typename?: 'DisableUser'
  success: Scalars['Boolean']['output']
}

export type DisableUserInput = {
  username: Scalars['String']['input']
}

export type EnableUser = {
  __typename?: 'EnableUser'
  success: Scalars['Boolean']['output']
}

export type EnableUserInput = {
  username: Scalars['String']['input']
}

export type FundingSource = BankAccountFundingSource | CreditCardFundingSource

export type FundingSourceClientConfiguration = {
  __typename?: 'FundingSourceClientConfiguration'
  data: Scalars['ID']['output']
}

export type FundingSourceConnection = {
  __typename?: 'FundingSourceConnection'
  items: Array<FundingSource>
  nextToken?: Maybe<Scalars['String']['output']>
}

export enum FundingSourceState {
  Active = 'ACTIVE',
  Inactive = 'INACTIVE',
  Refresh = 'REFRESH',
}

export type FundingSourceSupportDetail = {
  __typename?: 'FundingSourceSupportDetail'
  cardType: CardType
}

export type FundingSourceSupportInfo = {
  __typename?: 'FundingSourceSupportInfo'
  detail: Array<FundingSourceSupportDetail>
  fundingSourceType: Scalars['String']['output']
  network: Scalars['String']['output']
  providerType: Scalars['String']['output']
}

export enum FundingSourceType {
  BankAccount = 'BANK_ACCOUNT',
  CreditCard = 'CREDIT_CARD',
}

export type IdInput = {
  id: Scalars['ID']['input']
}

export enum KeyFormat {
  RsaPublicKey = 'RSA_PUBLIC_KEY',
  Spki = 'SPKI',
}

export type Mutation = {
  __typename?: 'Mutation'
  cancelCard: SealedCard
  cancelFundingSource: FundingSource
  cardProvision: ProvisionalCard
  completeFundingSource: FundingSource
  createPublicKeyForVirtualCards: PublicKey
  disableUser: DisableUser
  enableUser: EnableUser
  refreshFundingSource: FundingSource
  /**
   * Sets a funding source to state requiring refresh.
   * Allows testing without requiring occurrence of specific
   * event that would require refresh.
   *
   * SANDBOX ONLY
   */
  sandboxSetFundingSourceToRequireRefresh: FundingSource
  setupFundingSource: ProvisionalFundingSource
  updateCard: SealedCard
}

export type MutationCancelCardArgs = {
  input: CardCancelRequest
}

export type MutationCancelFundingSourceArgs = {
  input: IdInput
}

export type MutationCardProvisionArgs = {
  input: CardProvisionRequest
}

export type MutationCompleteFundingSourceArgs = {
  input: CompleteFundingSourceRequest
}

export type MutationCreatePublicKeyForVirtualCardsArgs = {
  input: CreatePublicKeyInput
}

export type MutationDisableUserArgs = {
  input: DisableUserInput
}

export type MutationEnableUserArgs = {
  input: EnableUserInput
}

export type MutationRefreshFundingSourceArgs = {
  input: RefreshFundingSourceRequest
}

export type MutationSandboxSetFundingSourceToRequireRefreshArgs = {
  input: SandboxSetFundingSourceToRequireRefreshRequest
}

export type MutationSetupFundingSourceArgs = {
  input: SetupFundingSourceRequest
}

export type MutationUpdateCardArgs = {
  input?: InputMaybe<CardUpdateRequest>
}

export type Owner = {
  __typename?: 'Owner'
  id: Scalars['String']['output']
  issuer: Scalars['String']['output']
}

export type PaginatedPublicKey = {
  __typename?: 'PaginatedPublicKey'
  items: Array<PublicKey>
  nextToken?: Maybe<Scalars['String']['output']>
}

export type PlaidAccountMetadata = {
  __typename?: 'PlaidAccountMetadata'
  /** ID of the bank account. */
  accountId: Scalars['String']['output']
  /** Bank account subtype. E.g. checking, saving etc. */
  subtype?: Maybe<Scalars['String']['output']>
}

export type ProvisionalCard = {
  __typename?: 'ProvisionalCard'
  card?: Maybe<Array<SealedCard>>
  clientRefId: Scalars['String']['output']
  createdAtEpochMs: Scalars['Float']['output']
  id: Scalars['ID']['output']
  owner: Scalars['ID']['output']
  provisioningState: ProvisioningState
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export type ProvisionalCardConnection = {
  __typename?: 'ProvisionalCardConnection'
  items: Array<ProvisionalCard>
  nextToken?: Maybe<Scalars['String']['output']>
}

export type ProvisionalFundingSource = CommonObject & {
  __typename?: 'ProvisionalFundingSource'
  createdAtEpochMs: Scalars['Float']['output']
  id: Scalars['ID']['output']
  owner: Scalars['ID']['output']
  provisioningData: Scalars['ID']['output']
  state: ProvisionalFundingSourceState
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export enum ProvisionalFundingSourceState {
  Completed = 'COMPLETED',
  Failed = 'FAILED',
  Pending = 'PENDING',
  Provisioning = 'PROVISIONING',
}

export enum ProvisioningState {
  Completed = 'COMPLETED',
  Failed = 'FAILED',
  Provisioning = 'PROVISIONING',
}

export type PublicKey = {
  __typename?: 'PublicKey'
  algorithm: Scalars['String']['output']
  createdAtEpochMs: Scalars['Float']['output']
  id: Scalars['ID']['output']
  keyFormat?: Maybe<KeyFormat>
  keyId: Scalars['String']['output']
  keyRingId: Scalars['String']['output']
  owner: Scalars['ID']['output']
  publicKey: Scalars['String']['output']
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export type Query = {
  __typename?: 'Query'
  getCard?: Maybe<SealedCard>
  getFundingSource?: Maybe<FundingSource>
  getFundingSourceClientConfiguration: FundingSourceClientConfiguration
  getKeyRingForVirtualCards: PaginatedPublicKey
  getProvisionalCard?: Maybe<ProvisionalCard>
  getPublicKeyForVirtualCards?: Maybe<PublicKey>
  getPublicKeysForVirtualCards: PaginatedPublicKey
  getTransaction?: Maybe<SealedTransaction>
  getVirtualCardsConfig: VirtualCardsConfig
  listCards: SealedCardConnection
  listFundingSources: FundingSourceConnection
  listProvisionalCards: ProvisionalCardConnection
  listTransactions2: SealedTransactionConnection
  listTransactionsByCardId2: SealedTransactionConnection
  listTransactionsByCardIdAndType: SealedTransactionConnection
  /**
   * Generates and returns the Plaid public token and bank account id
   * required to provide information to build the bank account funding source completion data. Allows testing without engaging full Plaid
   * flow.
   *
   * SANDBOX ONLY
   */
  sandboxGetPlaidData: SandboxGetPlaidDataResponse
}

export type QueryGetCardArgs = {
  id: Scalars['ID']['input']
  keyId?: InputMaybe<Scalars['String']['input']>
}

export type QueryGetFundingSourceArgs = {
  id: Scalars['ID']['input']
}

export type QueryGetKeyRingForVirtualCardsArgs = {
  keyFormats?: InputMaybe<Array<KeyFormat>>
  keyRingId: Scalars['String']['input']
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}

export type QueryGetProvisionalCardArgs = {
  id: Scalars['ID']['input']
}

export type QueryGetPublicKeyForVirtualCardsArgs = {
  keyFormats?: InputMaybe<Array<KeyFormat>>
  keyId: Scalars['String']['input']
}

export type QueryGetPublicKeysForVirtualCardsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}

export type QueryGetTransactionArgs = {
  id: Scalars['ID']['input']
  keyId?: InputMaybe<Scalars['String']['input']>
}

export type QueryListCardsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}

export type QueryListFundingSourcesArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}

export type QueryListProvisionalCardsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}

export type QueryListTransactions2Args = {
  dateRange?: InputMaybe<DateRangeInput>
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
  sortOrder?: InputMaybe<SortOrder>
}

export type QueryListTransactionsByCardId2Args = {
  cardId: Scalars['ID']['input']
  dateRange?: InputMaybe<DateRangeInput>
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
  sortOrder?: InputMaybe<SortOrder>
}

export type QueryListTransactionsByCardIdAndTypeArgs = {
  cardId: Scalars['ID']['input']
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
  transactionType: TransactionType
}

export type QuerySandboxGetPlaidDataArgs = {
  input: SandboxGetPlaidDataRequest
}

export type RefreshFundingSourceRequest = {
  id: Scalars['ID']['input']
  language?: InputMaybe<Scalars['String']['input']>
  refreshData: Scalars['ID']['input']
}

/**
 * Request to generate and retrieve the public token and bank account id
 * required to complete bank account funding source provisioning in a sandbox context.
 *
 * List of supported sandbox institutionId: https://plaid.com/docs/sandbox/institutions/
 */
export type SandboxGetPlaidDataRequest = {
  institutionId: Scalars['String']['input']
  username: Scalars['String']['input']
}

/** Response containing the public token and bank account metadata to complete bank account funding source provisioning in a sandbox context. */
export type SandboxGetPlaidDataResponse = {
  __typename?: 'SandboxGetPlaidDataResponse'
  /** Metadata of the bank account including ID and subtype. */
  accountMetadata: Array<PlaidAccountMetadata>
  /**
   * The public token that is required to build completion data for creating
   * a bank account funding source.
   */
  publicToken: Scalars['String']['output']
}

export type SandboxSetFundingSourceToRequireRefreshRequest = {
  fundingSourceId: Scalars['String']['input']
}

export type SealedAddressAttribute = {
  __typename?: 'SealedAddressAttribute'
  addressLine1: Scalars['String']['output']
  addressLine2?: Maybe<Scalars['String']['output']>
  city: Scalars['String']['output']
  country: Scalars['String']['output']
  postalCode: Scalars['String']['output']
  state: Scalars['String']['output']
}

export type SealedAttribute = {
  __typename?: 'SealedAttribute'
  algorithm: Scalars['String']['output']
  base64EncodedSealedData: Scalars['String']['output']
  keyId: Scalars['String']['output']
  plainTextType: Scalars['String']['output']
}

export type SealedAttributeInput = {
  algorithm: Scalars['String']['input']
  base64EncodedSealedData: Scalars['String']['input']
  keyId: Scalars['String']['input']
  plainTextType: Scalars['String']['input']
}

export type SealedCard = {
  __typename?: 'SealedCard'
  activeToEpochMs: Scalars['Float']['output']
  algorithm: Scalars['String']['output']
  alias?: Maybe<Scalars['String']['output']>
  billingAddress?: Maybe<SealedAddressAttribute>
  cancelledAtEpochMs?: Maybe<Scalars['Float']['output']>
  cardHolder: Scalars['String']['output']
  createdAtEpochMs: Scalars['Float']['output']
  csc: Scalars['String']['output']
  currency: Scalars['String']['output']
  expiry: SealedExpiryAttribute
  fundingSourceId: Scalars['ID']['output']
  id: Scalars['ID']['output']
  keyId: Scalars['String']['output']
  keyRingId: Scalars['ID']['output']
  last4: Scalars['String']['output']
  lastTransaction?: Maybe<SealedTransaction>
  metadata?: Maybe<SealedAttribute>
  owner: Scalars['ID']['output']
  owners: Array<Owner>
  pan: Scalars['String']['output']
  state: CardState
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export type SealedCardConnection = {
  __typename?: 'SealedCardConnection'
  items: Array<SealedCard>
  nextToken?: Maybe<Scalars['String']['output']>
}

export type SealedCurrencyAmountAttribute = {
  __typename?: 'SealedCurrencyAmountAttribute'
  amount: Scalars['String']['output']
  currency: Scalars['String']['output']
}

export type SealedExpiryAttribute = {
  __typename?: 'SealedExpiryAttribute'
  mm: Scalars['String']['output']
  yyyy: Scalars['String']['output']
}

export type SealedMarkupAttribute = {
  __typename?: 'SealedMarkupAttribute'
  flat: Scalars['String']['output']
  minCharge?: Maybe<Scalars['String']['output']>
  percent: Scalars['String']['output']
}

export type SealedTransaction = {
  __typename?: 'SealedTransaction'
  algorithm: Scalars['String']['output']
  billedAmount: SealedCurrencyAmountAttribute
  cardId: Scalars['ID']['output']
  createdAtEpochMs: Scalars['Float']['output']
  declineReason?: Maybe<Scalars['String']['output']>
  description: Scalars['String']['output']
  detail?: Maybe<Array<SealedTransactionDetailChargeAttribute>>
  id: Scalars['ID']['output']
  keyId: Scalars['String']['output']
  owner: Scalars['ID']['output']
  sequenceId: Scalars['ID']['output']
  settledAtEpochMs?: Maybe<Scalars['String']['output']>
  sortDateEpochMs: Scalars['Float']['output']
  transactedAmount: SealedCurrencyAmountAttribute
  transactedAtEpochMs: Scalars['String']['output']
  type: TransactionType
  updatedAtEpochMs: Scalars['Float']['output']
  version: Scalars['Int']['output']
}

export type SealedTransactionConnection = {
  __typename?: 'SealedTransactionConnection'
  items: Array<SealedTransaction>
  nextToken?: Maybe<Scalars['String']['output']>
}

export type SealedTransactionDetailChargeAttribute = {
  __typename?: 'SealedTransactionDetailChargeAttribute'
  continuationOfExistingCharge?: Maybe<Scalars['Boolean']['output']>
  description: Scalars['String']['output']
  fundingSourceAmount: SealedCurrencyAmountAttribute
  fundingSourceId: Scalars['ID']['output']
  markup: SealedMarkupAttribute
  markupAmount: SealedCurrencyAmountAttribute
  state?: Maybe<Scalars['String']['output']>
  virtualCardAmount: SealedCurrencyAmountAttribute
}

export type SetupFundingSourceRequest = {
  currency: Scalars['String']['input']
  language?: InputMaybe<Scalars['String']['input']>
  setupData?: InputMaybe<Scalars['ID']['input']>
  supportedProviders?: InputMaybe<Array<Scalars['String']['input']>>
  type: FundingSourceType
}

export type SignedAuthorizationText = {
  __typename?: 'SignedAuthorizationText'
  algorithm: Scalars['String']['output']
  content: Scalars['String']['output']
  contentType: Scalars['String']['output']
  data: Scalars['String']['output']
  keyId: Scalars['String']['output']
  language: Scalars['String']['output']
  signature: Scalars['String']['output']
}

export enum SortOrder {
  Asc = 'ASC',
  Desc = 'DESC',
}

export type Subscription = {
  __typename?: 'Subscription'
  onFundingSourceUpdate?: Maybe<FundingSource>
}

export type SubscriptionOnFundingSourceUpdateArgs = {
  owner: Scalars['ID']['input']
}

export enum TransactionType {
  Complete = 'COMPLETE',
  Decline = 'DECLINE',
  Pending = 'PENDING',
  Refund = 'REFUND',
}

export type TransactionVelocity = {
  __typename?: 'TransactionVelocity'
  maximum?: Maybe<Scalars['Int']['output']>
  velocity?: Maybe<Array<Scalars['String']['output']>>
}

export type VirtualCardApplicationsConfiguration = {
  __typename?: 'VirtualCardApplicationsConfiguration'
  data: Scalars['ID']['output']
}

export type VirtualCardsConfig = {
  __typename?: 'VirtualCardsConfig'
  bankAccountFundingSourceExpendableEnabled: Scalars['Boolean']['output']
  clientApplicationsConfiguration?: Maybe<VirtualCardApplicationsConfiguration>
  fundingSourceClientConfiguration?: Maybe<FundingSourceClientConfiguration>
  fundingSourceSupportInfo: Array<FundingSourceSupportInfo>
  maxCardCreationVelocity: Array<Scalars['String']['output']>
  maxFundingSourceFailureVelocity: Array<Scalars['String']['output']>
  maxFundingSourceVelocity: Array<Scalars['String']['output']>
  maxTransactionAmount: Array<CurrencyAmount>
  maxTransactionVelocity: Array<CurrencyVelocity>
  virtualCardCurrencies: Array<Scalars['String']['output']>
}

export type PublicKeyFragment = {
  __typename?: 'PublicKey'
  id: string
  keyId: string
  keyRingId: string
  algorithm: string
  keyFormat?: KeyFormat | null
  publicKey: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
}

export type PaginatedPublicKeyFragment = {
  __typename?: 'PaginatedPublicKey'
  nextToken?: string | null
  items: Array<{
    __typename?: 'PublicKey'
    id: string
    keyId: string
    keyRingId: string
    algorithm: string
    keyFormat?: KeyFormat | null
    publicKey: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
  }>
}

export type OwnerFragment = { __typename?: 'Owner'; id: string; issuer: string }

export type SealedAttributeFragment = {
  __typename?: 'SealedAttribute'
  keyId: string
  algorithm: string
  plainTextType: string
  base64EncodedSealedData: string
}

export type ProvisionalFundingSourceFragment = {
  __typename?: 'ProvisionalFundingSource'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  provisioningData: string
  state: ProvisionalFundingSourceState
}

export type CreditCardFundingSourceFragment = {
  __typename?: 'CreditCardFundingSource'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  state: FundingSourceState
  currency: string
  last4: string
  network: CreditCardNetwork
  cardType: CardType
  transactionVelocity?: {
    __typename?: 'TransactionVelocity'
    maximum?: number | null
    velocity?: Array<string> | null
  } | null
}

export type BankAccountFundingSourceFragment = {
  __typename?: 'BankAccountFundingSource'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  state: FundingSourceState
  currency: string
  bankAccountType: BankAccountType
  last4: string
  transactionVelocity?: {
    __typename?: 'TransactionVelocity'
    maximum?: number | null
    velocity?: Array<string> | null
  } | null
  authorization: {
    __typename?: 'SignedAuthorizationText'
    language: string
    content: string
    contentType: string
    signature: string
    keyId: string
    algorithm: string
    data: string
  }
  institutionName: {
    __typename?: 'SealedAttribute'
    keyId: string
    algorithm: string
    plainTextType: string
    base64EncodedSealedData: string
  }
  institutionLogo?: {
    __typename?: 'SealedAttribute'
    keyId: string
    algorithm: string
    plainTextType: string
    base64EncodedSealedData: string
  } | null
}

export type ProvisionalCardFragment = {
  __typename?: 'ProvisionalCard'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  clientRefId: string
  provisioningState: ProvisioningState
  card?: Array<{
    __typename?: 'SealedCard'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    algorithm: string
    keyId: string
    keyRingId: string
    fundingSourceId: string
    currency: string
    state: CardState
    activeToEpochMs: number
    cancelledAtEpochMs?: number | null
    last4: string
    cardHolder: string
    alias?: string | null
    pan: string
    csc: string
    owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
    billingAddress?: {
      __typename?: 'SealedAddressAttribute'
      addressLine1: string
      addressLine2?: string | null
      city: string
      state: string
      postalCode: string
      country: string
    } | null
    expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
    metadata?: {
      __typename?: 'SealedAttribute'
      keyId: string
      algorithm: string
      plainTextType: string
      base64EncodedSealedData: string
    } | null
  }> | null
}

export type SealedAddressAttributeFragment = {
  __typename?: 'SealedAddressAttribute'
  addressLine1: string
  addressLine2?: string | null
  city: string
  state: string
  postalCode: string
  country: string
}

export type SealedExpiryAttributeFragment = {
  __typename?: 'SealedExpiryAttribute'
  mm: string
  yyyy: string
}

export type SealedCardFragment = {
  __typename?: 'SealedCard'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  algorithm: string
  keyId: string
  keyRingId: string
  fundingSourceId: string
  currency: string
  state: CardState
  activeToEpochMs: number
  cancelledAtEpochMs?: number | null
  last4: string
  cardHolder: string
  alias?: string | null
  pan: string
  csc: string
  owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
  billingAddress?: {
    __typename?: 'SealedAddressAttribute'
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country: string
  } | null
  expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
  metadata?: {
    __typename?: 'SealedAttribute'
    keyId: string
    algorithm: string
    plainTextType: string
    base64EncodedSealedData: string
  } | null
}

export type SealedCardWithLastTransactionFragment = {
  __typename?: 'SealedCard'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  algorithm: string
  keyId: string
  keyRingId: string
  fundingSourceId: string
  currency: string
  state: CardState
  activeToEpochMs: number
  cancelledAtEpochMs?: number | null
  last4: string
  cardHolder: string
  alias?: string | null
  pan: string
  csc: string
  lastTransaction?: {
    __typename?: 'SealedTransaction'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    sortDateEpochMs: number
    algorithm: string
    keyId: string
    cardId: string
    sequenceId: string
    type: TransactionType
    transactedAtEpochMs: string
    settledAtEpochMs?: string | null
    description: string
    declineReason?: string | null
    billedAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
    transactedAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
    detail?: Array<{
      __typename?: 'SealedTransactionDetailChargeAttribute'
      fundingSourceId: string
      description: string
      state?: string | null
      continuationOfExistingCharge?: boolean | null
      virtualCardAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      markup: {
        __typename?: 'SealedMarkupAttribute'
        percent: string
        flat: string
        minCharge?: string | null
      }
      markupAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      fundingSourceAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
    }> | null
  } | null
  owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
  billingAddress?: {
    __typename?: 'SealedAddressAttribute'
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country: string
  } | null
  expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
  metadata?: {
    __typename?: 'SealedAttribute'
    keyId: string
    algorithm: string
    plainTextType: string
    base64EncodedSealedData: string
  } | null
}

export type SealedCurrencyAmountAttributeFragment = {
  __typename?: 'SealedCurrencyAmountAttribute'
  currency: string
  amount: string
}

export type SealedTransactionFragment = {
  __typename?: 'SealedTransaction'
  id: string
  owner: string
  version: number
  createdAtEpochMs: number
  updatedAtEpochMs: number
  sortDateEpochMs: number
  algorithm: string
  keyId: string
  cardId: string
  sequenceId: string
  type: TransactionType
  transactedAtEpochMs: string
  settledAtEpochMs?: string | null
  description: string
  declineReason?: string | null
  billedAmount: {
    __typename?: 'SealedCurrencyAmountAttribute'
    currency: string
    amount: string
  }
  transactedAmount: {
    __typename?: 'SealedCurrencyAmountAttribute'
    currency: string
    amount: string
  }
  detail?: Array<{
    __typename?: 'SealedTransactionDetailChargeAttribute'
    fundingSourceId: string
    description: string
    state?: string | null
    continuationOfExistingCharge?: boolean | null
    virtualCardAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
    markup: {
      __typename?: 'SealedMarkupAttribute'
      percent: string
      flat: string
      minCharge?: string | null
    }
    markupAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
    fundingSourceAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
  }> | null
}

export type FundingSourceSupportDetailFragment = {
  __typename?: 'FundingSourceSupportDetail'
  cardType: CardType
}

export type FundingSourceSupportInfoFragment = {
  __typename?: 'FundingSourceSupportInfo'
  providerType: string
  fundingSourceType: string
  network: string
  detail: Array<{
    __typename?: 'FundingSourceSupportDetail'
    cardType: CardType
  }>
}

export type VirtualCardsConfigFragment = {
  __typename?: 'VirtualCardsConfig'
  maxFundingSourceVelocity: Array<string>
  maxFundingSourceFailureVelocity: Array<string>
  maxCardCreationVelocity: Array<string>
  virtualCardCurrencies: Array<string>
  bankAccountFundingSourceExpendableEnabled: boolean
  maxTransactionVelocity: Array<{
    __typename?: 'CurrencyVelocity'
    currency: string
    velocity: Array<string>
  }>
  maxTransactionAmount: Array<{
    __typename?: 'CurrencyAmount'
    currency: string
    amount: string
  }>
  fundingSourceSupportInfo: Array<{
    __typename?: 'FundingSourceSupportInfo'
    providerType: string
    fundingSourceType: string
    network: string
    detail: Array<{
      __typename?: 'FundingSourceSupportDetail'
      cardType: CardType
    }>
  }>
  fundingSourceClientConfiguration?: {
    __typename?: 'FundingSourceClientConfiguration'
    data: string
  } | null
  clientApplicationsConfiguration?: {
    __typename?: 'VirtualCardApplicationsConfiguration'
    data: string
  } | null
}

export type CreatePublicKeyMutationVariables = Exact<{
  input: CreatePublicKeyInput
}>

export type CreatePublicKeyMutation = {
  __typename?: 'Mutation'
  createPublicKeyForVirtualCards: {
    __typename?: 'PublicKey'
    id: string
    keyId: string
    keyRingId: string
    algorithm: string
    keyFormat?: KeyFormat | null
    publicKey: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
  }
}

export type SetupFundingSourceMutationVariables = Exact<{
  input: SetupFundingSourceRequest
}>

export type SetupFundingSourceMutation = {
  __typename?: 'Mutation'
  setupFundingSource: {
    __typename?: 'ProvisionalFundingSource'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    provisioningData: string
    state: ProvisionalFundingSourceState
  }
}

export type CompleteFundingSourceMutationVariables = Exact<{
  input: CompleteFundingSourceRequest
}>

export type CompleteFundingSourceMutation = {
  __typename?: 'Mutation'
  completeFundingSource:
    | {
        __typename?: 'BankAccountFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        bankAccountType: BankAccountType
        last4: string
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
        authorization: {
          __typename?: 'SignedAuthorizationText'
          language: string
          content: string
          contentType: string
          signature: string
          keyId: string
          algorithm: string
          data: string
        }
        institutionName: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        }
        institutionLogo?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }
    | {
        __typename?: 'CreditCardFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        last4: string
        network: CreditCardNetwork
        cardType: CardType
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
      }
}

export type RefreshFundingSourceMutationVariables = Exact<{
  input: RefreshFundingSourceRequest
}>

export type RefreshFundingSourceMutation = {
  __typename?: 'Mutation'
  refreshFundingSource:
    | {
        __typename?: 'BankAccountFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        bankAccountType: BankAccountType
        last4: string
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
        authorization: {
          __typename?: 'SignedAuthorizationText'
          language: string
          content: string
          contentType: string
          signature: string
          keyId: string
          algorithm: string
          data: string
        }
        institutionName: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        }
        institutionLogo?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }
    | {
        __typename?: 'CreditCardFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        last4: string
        network: CreditCardNetwork
        cardType: CardType
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
      }
}

export type CancelFundingSourceMutationVariables = Exact<{
  input: IdInput
}>

export type CancelFundingSourceMutation = {
  __typename?: 'Mutation'
  cancelFundingSource:
    | {
        __typename?: 'BankAccountFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        bankAccountType: BankAccountType
        last4: string
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
        authorization: {
          __typename?: 'SignedAuthorizationText'
          language: string
          content: string
          contentType: string
          signature: string
          keyId: string
          algorithm: string
          data: string
        }
        institutionName: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        }
        institutionLogo?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }
    | {
        __typename?: 'CreditCardFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        last4: string
        network: CreditCardNetwork
        cardType: CardType
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
      }
}

export type ProvisionVirtualCardMutationVariables = Exact<{
  input: CardProvisionRequest
}>

export type ProvisionVirtualCardMutation = {
  __typename?: 'Mutation'
  cardProvision: {
    __typename?: 'ProvisionalCard'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    clientRefId: string
    provisioningState: ProvisioningState
    card?: Array<{
      __typename?: 'SealedCard'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      algorithm: string
      keyId: string
      keyRingId: string
      fundingSourceId: string
      currency: string
      state: CardState
      activeToEpochMs: number
      cancelledAtEpochMs?: number | null
      last4: string
      cardHolder: string
      alias?: string | null
      pan: string
      csc: string
      owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
      billingAddress?: {
        __typename?: 'SealedAddressAttribute'
        addressLine1: string
        addressLine2?: string | null
        city: string
        state: string
        postalCode: string
        country: string
      } | null
      expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
      metadata?: {
        __typename?: 'SealedAttribute'
        keyId: string
        algorithm: string
        plainTextType: string
        base64EncodedSealedData: string
      } | null
    }> | null
  }
}

export type UpdateVirtualCardMutationVariables = Exact<{
  input: CardUpdateRequest
}>

export type UpdateVirtualCardMutation = {
  __typename?: 'Mutation'
  updateCard: {
    __typename?: 'SealedCard'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    algorithm: string
    keyId: string
    keyRingId: string
    fundingSourceId: string
    currency: string
    state: CardState
    activeToEpochMs: number
    cancelledAtEpochMs?: number | null
    last4: string
    cardHolder: string
    alias?: string | null
    pan: string
    csc: string
    lastTransaction?: {
      __typename?: 'SealedTransaction'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      sortDateEpochMs: number
      algorithm: string
      keyId: string
      cardId: string
      sequenceId: string
      type: TransactionType
      transactedAtEpochMs: string
      settledAtEpochMs?: string | null
      description: string
      declineReason?: string | null
      billedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      transactedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      detail?: Array<{
        __typename?: 'SealedTransactionDetailChargeAttribute'
        fundingSourceId: string
        description: string
        state?: string | null
        continuationOfExistingCharge?: boolean | null
        virtualCardAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        markup: {
          __typename?: 'SealedMarkupAttribute'
          percent: string
          flat: string
          minCharge?: string | null
        }
        markupAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        fundingSourceAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
      }> | null
    } | null
    owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
    billingAddress?: {
      __typename?: 'SealedAddressAttribute'
      addressLine1: string
      addressLine2?: string | null
      city: string
      state: string
      postalCode: string
      country: string
    } | null
    expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
    metadata?: {
      __typename?: 'SealedAttribute'
      keyId: string
      algorithm: string
      plainTextType: string
      base64EncodedSealedData: string
    } | null
  }
}

export type CancelVirtualCardMutationVariables = Exact<{
  input: CardCancelRequest
}>

export type CancelVirtualCardMutation = {
  __typename?: 'Mutation'
  cancelCard: {
    __typename?: 'SealedCard'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    algorithm: string
    keyId: string
    keyRingId: string
    fundingSourceId: string
    currency: string
    state: CardState
    activeToEpochMs: number
    cancelledAtEpochMs?: number | null
    last4: string
    cardHolder: string
    alias?: string | null
    pan: string
    csc: string
    lastTransaction?: {
      __typename?: 'SealedTransaction'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      sortDateEpochMs: number
      algorithm: string
      keyId: string
      cardId: string
      sequenceId: string
      type: TransactionType
      transactedAtEpochMs: string
      settledAtEpochMs?: string | null
      description: string
      declineReason?: string | null
      billedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      transactedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      detail?: Array<{
        __typename?: 'SealedTransactionDetailChargeAttribute'
        fundingSourceId: string
        description: string
        state?: string | null
        continuationOfExistingCharge?: boolean | null
        virtualCardAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        markup: {
          __typename?: 'SealedMarkupAttribute'
          percent: string
          flat: string
          minCharge?: string | null
        }
        markupAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        fundingSourceAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
      }> | null
    } | null
    owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
    billingAddress?: {
      __typename?: 'SealedAddressAttribute'
      addressLine1: string
      addressLine2?: string | null
      city: string
      state: string
      postalCode: string
      country: string
    } | null
    expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
    metadata?: {
      __typename?: 'SealedAttribute'
      keyId: string
      algorithm: string
      plainTextType: string
      base64EncodedSealedData: string
    } | null
  }
}

export type SandboxSetFundingSourceToRequireRefreshMutationVariables = Exact<{
  input: SandboxSetFundingSourceToRequireRefreshRequest
}>

export type SandboxSetFundingSourceToRequireRefreshMutation = {
  __typename?: 'Mutation'
  sandboxSetFundingSourceToRequireRefresh:
    | {
        __typename?: 'BankAccountFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        bankAccountType: BankAccountType
        last4: string
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
        authorization: {
          __typename?: 'SignedAuthorizationText'
          language: string
          content: string
          contentType: string
          signature: string
          keyId: string
          algorithm: string
          data: string
        }
        institutionName: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        }
        institutionLogo?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }
    | {
        __typename?: 'CreditCardFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        last4: string
        network: CreditCardNetwork
        cardType: CardType
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
      }
}

export type EnableUserMutationVariables = Exact<{
  input: EnableUserInput
}>

export type EnableUserMutation = {
  __typename?: 'Mutation'
  enableUser: { __typename?: 'EnableUser'; success: boolean }
}

export type DisableUserMutationVariables = Exact<{
  input: DisableUserInput
}>

export type DisableUserMutation = {
  __typename?: 'Mutation'
  disableUser: { __typename?: 'DisableUser'; success: boolean }
}

export type GetVirtualCardsConfigQueryVariables = Exact<{
  [key: string]: never
}>

export type GetVirtualCardsConfigQuery = {
  __typename?: 'Query'
  getVirtualCardsConfig: {
    __typename?: 'VirtualCardsConfig'
    maxFundingSourceVelocity: Array<string>
    maxFundingSourceFailureVelocity: Array<string>
    maxCardCreationVelocity: Array<string>
    virtualCardCurrencies: Array<string>
    bankAccountFundingSourceExpendableEnabled: boolean
    maxTransactionVelocity: Array<{
      __typename?: 'CurrencyVelocity'
      currency: string
      velocity: Array<string>
    }>
    maxTransactionAmount: Array<{
      __typename?: 'CurrencyAmount'
      currency: string
      amount: string
    }>
    fundingSourceSupportInfo: Array<{
      __typename?: 'FundingSourceSupportInfo'
      providerType: string
      fundingSourceType: string
      network: string
      detail: Array<{
        __typename?: 'FundingSourceSupportDetail'
        cardType: CardType
      }>
    }>
    fundingSourceClientConfiguration?: {
      __typename?: 'FundingSourceClientConfiguration'
      data: string
    } | null
    clientApplicationsConfiguration?: {
      __typename?: 'VirtualCardApplicationsConfiguration'
      data: string
    } | null
  }
}

export type GetPublicKeyQueryVariables = Exact<{
  keyId: Scalars['String']['input']
  keyFormats?: InputMaybe<Array<KeyFormat> | KeyFormat>
}>

export type GetPublicKeyQuery = {
  __typename?: 'Query'
  getPublicKeyForVirtualCards?: {
    __typename?: 'PublicKey'
    id: string
    keyId: string
    keyRingId: string
    algorithm: string
    keyFormat?: KeyFormat | null
    publicKey: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
  } | null
}

export type GetPublicKeysQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}>

export type GetPublicKeysQuery = {
  __typename?: 'Query'
  getPublicKeysForVirtualCards: {
    __typename?: 'PaginatedPublicKey'
    nextToken?: string | null
    items: Array<{
      __typename?: 'PublicKey'
      id: string
      keyId: string
      keyRingId: string
      algorithm: string
      keyFormat?: KeyFormat | null
      publicKey: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
    }>
  }
}

export type GetKeyRingQueryVariables = Exact<{
  keyRingId: Scalars['String']['input']
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
  keyFormats?: InputMaybe<Array<KeyFormat> | KeyFormat>
}>

export type GetKeyRingQuery = {
  __typename?: 'Query'
  getKeyRingForVirtualCards: {
    __typename?: 'PaginatedPublicKey'
    nextToken?: string | null
    items: Array<{
      __typename?: 'PublicKey'
      id: string
      keyId: string
      keyRingId: string
      algorithm: string
      keyFormat?: KeyFormat | null
      publicKey: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
    }>
  }
}

export type GetFundingSourceClientConfigurationQueryVariables = Exact<{
  [key: string]: never
}>

export type GetFundingSourceClientConfigurationQuery = {
  __typename?: 'Query'
  getFundingSourceClientConfiguration: {
    __typename?: 'FundingSourceClientConfiguration'
    data: string
  }
}

export type GetFundingSourceQueryVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type GetFundingSourceQuery = {
  __typename?: 'Query'
  getFundingSource?:
    | {
        __typename?: 'BankAccountFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        bankAccountType: BankAccountType
        last4: string
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
        authorization: {
          __typename?: 'SignedAuthorizationText'
          language: string
          content: string
          contentType: string
          signature: string
          keyId: string
          algorithm: string
          data: string
        }
        institutionName: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        }
        institutionLogo?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }
    | {
        __typename?: 'CreditCardFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        last4: string
        network: CreditCardNetwork
        cardType: CardType
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
      }
    | null
}

export type ListFundingSourcesQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}>

export type ListFundingSourcesQuery = {
  __typename?: 'Query'
  listFundingSources: {
    __typename?: 'FundingSourceConnection'
    nextToken?: string | null
    items: Array<
      | {
          __typename?: 'BankAccountFundingSource'
          id: string
          owner: string
          version: number
          createdAtEpochMs: number
          updatedAtEpochMs: number
          state: FundingSourceState
          currency: string
          bankAccountType: BankAccountType
          last4: string
          transactionVelocity?: {
            __typename?: 'TransactionVelocity'
            maximum?: number | null
            velocity?: Array<string> | null
          } | null
          authorization: {
            __typename?: 'SignedAuthorizationText'
            language: string
            content: string
            contentType: string
            signature: string
            keyId: string
            algorithm: string
            data: string
          }
          institutionName: {
            __typename?: 'SealedAttribute'
            keyId: string
            algorithm: string
            plainTextType: string
            base64EncodedSealedData: string
          }
          institutionLogo?: {
            __typename?: 'SealedAttribute'
            keyId: string
            algorithm: string
            plainTextType: string
            base64EncodedSealedData: string
          } | null
        }
      | {
          __typename?: 'CreditCardFundingSource'
          id: string
          owner: string
          version: number
          createdAtEpochMs: number
          updatedAtEpochMs: number
          state: FundingSourceState
          currency: string
          last4: string
          network: CreditCardNetwork
          cardType: CardType
          transactionVelocity?: {
            __typename?: 'TransactionVelocity'
            maximum?: number | null
            velocity?: Array<string> | null
          } | null
        }
    >
  }
}

export type GetProvisionalCardQueryVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type GetProvisionalCardQuery = {
  __typename?: 'Query'
  getProvisionalCard?: {
    __typename?: 'ProvisionalCard'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    clientRefId: string
    provisioningState: ProvisioningState
    card?: Array<{
      __typename?: 'SealedCard'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      algorithm: string
      keyId: string
      keyRingId: string
      fundingSourceId: string
      currency: string
      state: CardState
      activeToEpochMs: number
      cancelledAtEpochMs?: number | null
      last4: string
      cardHolder: string
      alias?: string | null
      pan: string
      csc: string
      owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
      billingAddress?: {
        __typename?: 'SealedAddressAttribute'
        addressLine1: string
        addressLine2?: string | null
        city: string
        state: string
        postalCode: string
        country: string
      } | null
      expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
      metadata?: {
        __typename?: 'SealedAttribute'
        keyId: string
        algorithm: string
        plainTextType: string
        base64EncodedSealedData: string
      } | null
    }> | null
  } | null
}

export type ListProvisionalCardsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}>

export type ListProvisionalCardsQuery = {
  __typename?: 'Query'
  listProvisionalCards: {
    __typename?: 'ProvisionalCardConnection'
    nextToken?: string | null
    items: Array<{
      __typename?: 'ProvisionalCard'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      clientRefId: string
      provisioningState: ProvisioningState
      card?: Array<{
        __typename?: 'SealedCard'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        algorithm: string
        keyId: string
        keyRingId: string
        fundingSourceId: string
        currency: string
        state: CardState
        activeToEpochMs: number
        cancelledAtEpochMs?: number | null
        last4: string
        cardHolder: string
        alias?: string | null
        pan: string
        csc: string
        owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
        billingAddress?: {
          __typename?: 'SealedAddressAttribute'
          addressLine1: string
          addressLine2?: string | null
          city: string
          state: string
          postalCode: string
          country: string
        } | null
        expiry: {
          __typename?: 'SealedExpiryAttribute'
          mm: string
          yyyy: string
        }
        metadata?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }> | null
    }>
  }
}

export type GetCardQueryVariables = Exact<{
  id: Scalars['ID']['input']
  keyId?: InputMaybe<Scalars['String']['input']>
}>

export type GetCardQuery = {
  __typename?: 'Query'
  getCard?: {
    __typename?: 'SealedCard'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    algorithm: string
    keyId: string
    keyRingId: string
    fundingSourceId: string
    currency: string
    state: CardState
    activeToEpochMs: number
    cancelledAtEpochMs?: number | null
    last4: string
    cardHolder: string
    alias?: string | null
    pan: string
    csc: string
    lastTransaction?: {
      __typename?: 'SealedTransaction'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      sortDateEpochMs: number
      algorithm: string
      keyId: string
      cardId: string
      sequenceId: string
      type: TransactionType
      transactedAtEpochMs: string
      settledAtEpochMs?: string | null
      description: string
      declineReason?: string | null
      billedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      transactedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      detail?: Array<{
        __typename?: 'SealedTransactionDetailChargeAttribute'
        fundingSourceId: string
        description: string
        state?: string | null
        continuationOfExistingCharge?: boolean | null
        virtualCardAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        markup: {
          __typename?: 'SealedMarkupAttribute'
          percent: string
          flat: string
          minCharge?: string | null
        }
        markupAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        fundingSourceAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
      }> | null
    } | null
    owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
    billingAddress?: {
      __typename?: 'SealedAddressAttribute'
      addressLine1: string
      addressLine2?: string | null
      city: string
      state: string
      postalCode: string
      country: string
    } | null
    expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
    metadata?: {
      __typename?: 'SealedAttribute'
      keyId: string
      algorithm: string
      plainTextType: string
      base64EncodedSealedData: string
    } | null
  } | null
}

export type ListCardsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}>

export type ListCardsQuery = {
  __typename?: 'Query'
  listCards: {
    __typename?: 'SealedCardConnection'
    nextToken?: string | null
    items: Array<{
      __typename?: 'SealedCard'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      algorithm: string
      keyId: string
      keyRingId: string
      fundingSourceId: string
      currency: string
      state: CardState
      activeToEpochMs: number
      cancelledAtEpochMs?: number | null
      last4: string
      cardHolder: string
      alias?: string | null
      pan: string
      csc: string
      lastTransaction?: {
        __typename?: 'SealedTransaction'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        sortDateEpochMs: number
        algorithm: string
        keyId: string
        cardId: string
        sequenceId: string
        type: TransactionType
        transactedAtEpochMs: string
        settledAtEpochMs?: string | null
        description: string
        declineReason?: string | null
        billedAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        transactedAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        detail?: Array<{
          __typename?: 'SealedTransactionDetailChargeAttribute'
          fundingSourceId: string
          description: string
          state?: string | null
          continuationOfExistingCharge?: boolean | null
          virtualCardAmount: {
            __typename?: 'SealedCurrencyAmountAttribute'
            currency: string
            amount: string
          }
          markup: {
            __typename?: 'SealedMarkupAttribute'
            percent: string
            flat: string
            minCharge?: string | null
          }
          markupAmount: {
            __typename?: 'SealedCurrencyAmountAttribute'
            currency: string
            amount: string
          }
          fundingSourceAmount: {
            __typename?: 'SealedCurrencyAmountAttribute'
            currency: string
            amount: string
          }
        }> | null
      } | null
      owners: Array<{ __typename?: 'Owner'; id: string; issuer: string }>
      billingAddress?: {
        __typename?: 'SealedAddressAttribute'
        addressLine1: string
        addressLine2?: string | null
        city: string
        state: string
        postalCode: string
        country: string
      } | null
      expiry: { __typename?: 'SealedExpiryAttribute'; mm: string; yyyy: string }
      metadata?: {
        __typename?: 'SealedAttribute'
        keyId: string
        algorithm: string
        plainTextType: string
        base64EncodedSealedData: string
      } | null
    }>
  }
}

export type GetTransactionQueryVariables = Exact<{
  id: Scalars['ID']['input']
  keyId?: InputMaybe<Scalars['String']['input']>
}>

export type GetTransactionQuery = {
  __typename?: 'Query'
  getTransaction?: {
    __typename?: 'SealedTransaction'
    id: string
    owner: string
    version: number
    createdAtEpochMs: number
    updatedAtEpochMs: number
    sortDateEpochMs: number
    algorithm: string
    keyId: string
    cardId: string
    sequenceId: string
    type: TransactionType
    transactedAtEpochMs: string
    settledAtEpochMs?: string | null
    description: string
    declineReason?: string | null
    billedAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
    transactedAmount: {
      __typename?: 'SealedCurrencyAmountAttribute'
      currency: string
      amount: string
    }
    detail?: Array<{
      __typename?: 'SealedTransactionDetailChargeAttribute'
      fundingSourceId: string
      description: string
      state?: string | null
      continuationOfExistingCharge?: boolean | null
      virtualCardAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      markup: {
        __typename?: 'SealedMarkupAttribute'
        percent: string
        flat: string
        minCharge?: string | null
      }
      markupAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      fundingSourceAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
    }> | null
  } | null
}

export type ListTransactionsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
  dateRange?: InputMaybe<DateRangeInput>
  sortOrder?: InputMaybe<SortOrder>
}>

export type ListTransactionsQuery = {
  __typename?: 'Query'
  listTransactions2: {
    __typename?: 'SealedTransactionConnection'
    nextToken?: string | null
    items: Array<{
      __typename?: 'SealedTransaction'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      sortDateEpochMs: number
      algorithm: string
      keyId: string
      cardId: string
      sequenceId: string
      type: TransactionType
      transactedAtEpochMs: string
      settledAtEpochMs?: string | null
      description: string
      declineReason?: string | null
      billedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      transactedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      detail?: Array<{
        __typename?: 'SealedTransactionDetailChargeAttribute'
        fundingSourceId: string
        description: string
        state?: string | null
        continuationOfExistingCharge?: boolean | null
        virtualCardAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        markup: {
          __typename?: 'SealedMarkupAttribute'
          percent: string
          flat: string
          minCharge?: string | null
        }
        markupAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        fundingSourceAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
      }> | null
    }>
  }
}

export type ListTransactionsByCardIdQueryVariables = Exact<{
  cardId: Scalars['ID']['input']
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
  dateRange?: InputMaybe<DateRangeInput>
  sortOrder?: InputMaybe<SortOrder>
}>

export type ListTransactionsByCardIdQuery = {
  __typename?: 'Query'
  listTransactionsByCardId2: {
    __typename?: 'SealedTransactionConnection'
    nextToken?: string | null
    items: Array<{
      __typename?: 'SealedTransaction'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      sortDateEpochMs: number
      algorithm: string
      keyId: string
      cardId: string
      sequenceId: string
      type: TransactionType
      transactedAtEpochMs: string
      settledAtEpochMs?: string | null
      description: string
      declineReason?: string | null
      billedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      transactedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      detail?: Array<{
        __typename?: 'SealedTransactionDetailChargeAttribute'
        fundingSourceId: string
        description: string
        state?: string | null
        continuationOfExistingCharge?: boolean | null
        virtualCardAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        markup: {
          __typename?: 'SealedMarkupAttribute'
          percent: string
          flat: string
          minCharge?: string | null
        }
        markupAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        fundingSourceAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
      }> | null
    }>
  }
}

export type ListTransactionsByCardIdAndTypeQueryVariables = Exact<{
  cardId: Scalars['ID']['input']
  transactionType: TransactionType
  limit?: InputMaybe<Scalars['Int']['input']>
  nextToken?: InputMaybe<Scalars['String']['input']>
}>

export type ListTransactionsByCardIdAndTypeQuery = {
  __typename?: 'Query'
  listTransactionsByCardIdAndType: {
    __typename?: 'SealedTransactionConnection'
    nextToken?: string | null
    items: Array<{
      __typename?: 'SealedTransaction'
      id: string
      owner: string
      version: number
      createdAtEpochMs: number
      updatedAtEpochMs: number
      sortDateEpochMs: number
      algorithm: string
      keyId: string
      cardId: string
      sequenceId: string
      type: TransactionType
      transactedAtEpochMs: string
      settledAtEpochMs?: string | null
      description: string
      declineReason?: string | null
      billedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      transactedAmount: {
        __typename?: 'SealedCurrencyAmountAttribute'
        currency: string
        amount: string
      }
      detail?: Array<{
        __typename?: 'SealedTransactionDetailChargeAttribute'
        fundingSourceId: string
        description: string
        state?: string | null
        continuationOfExistingCharge?: boolean | null
        virtualCardAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        markup: {
          __typename?: 'SealedMarkupAttribute'
          percent: string
          flat: string
          minCharge?: string | null
        }
        markupAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
        fundingSourceAmount: {
          __typename?: 'SealedCurrencyAmountAttribute'
          currency: string
          amount: string
        }
      }> | null
    }>
  }
}

export type SandboxGetPlaidDataQueryVariables = Exact<{
  input: SandboxGetPlaidDataRequest
}>

export type SandboxGetPlaidDataQuery = {
  __typename?: 'Query'
  sandboxGetPlaidData: {
    __typename?: 'SandboxGetPlaidDataResponse'
    publicToken: string
    accountMetadata: Array<{
      __typename?: 'PlaidAccountMetadata'
      accountId: string
      subtype?: string | null
    }>
  }
}

export type OnFundingSourceUpdateSubscriptionVariables = Exact<{
  owner: Scalars['ID']['input']
}>

export type OnFundingSourceUpdateSubscription = {
  __typename?: 'Subscription'
  onFundingSourceUpdate?:
    | {
        __typename?: 'BankAccountFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        bankAccountType: BankAccountType
        last4: string
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
        authorization: {
          __typename?: 'SignedAuthorizationText'
          language: string
          content: string
          contentType: string
          signature: string
          keyId: string
          algorithm: string
          data: string
        }
        institutionName: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        }
        institutionLogo?: {
          __typename?: 'SealedAttribute'
          keyId: string
          algorithm: string
          plainTextType: string
          base64EncodedSealedData: string
        } | null
      }
    | {
        __typename?: 'CreditCardFundingSource'
        id: string
        owner: string
        version: number
        createdAtEpochMs: number
        updatedAtEpochMs: number
        state: FundingSourceState
        currency: string
        last4: string
        network: CreditCardNetwork
        cardType: CardType
        transactionVelocity?: {
          __typename?: 'TransactionVelocity'
          maximum?: number | null
          velocity?: Array<string> | null
        } | null
      }
    | null
}

export const PublicKeyFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyFormat' } },
          { kind: 'Field', name: { kind: 'Name', value: 'publicKey' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PublicKeyFragment, unknown>
export const PaginatedPublicKeyFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PaginatedPublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PaginatedPublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'items' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PublicKey' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyFormat' } },
          { kind: 'Field', name: { kind: 'Name', value: 'publicKey' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PaginatedPublicKeyFragment, unknown>
export const ProvisionalFundingSourceFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProvisionalFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'ProvisionalFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'provisioningData' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProvisionalFundingSourceFragment, unknown>
export const CreditCardFundingSourceFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CreditCardFundingSourceFragment, unknown>
export const SealedAttributeFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedAttributeFragment, unknown>
export const BankAccountFundingSourceFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<BankAccountFundingSourceFragment, unknown>
export const OwnerFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<OwnerFragment, unknown>
export const SealedAddressAttributeFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedAddressAttributeFragment, unknown>
export const SealedExpiryAttributeFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedExpiryAttributeFragment, unknown>
export const SealedCardFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedCardFragment, unknown>
export const ProvisionalCardFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProvisionalCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'ProvisionalCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'clientRefId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'provisioningState' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'card' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedCard' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProvisionalCardFragment, unknown>
export const SealedCurrencyAmountAttributeFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedCurrencyAmountAttributeFragment, unknown>
export const SealedTransactionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedTransactionFragment, unknown>
export const SealedCardWithLastTransactionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCardWithLastTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'SealedCard' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'lastTransaction' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedTransaction' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SealedCardWithLastTransactionFragment, unknown>
export const FundingSourceSupportDetailFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FundingSourceSupportDetailFragment, unknown>
export const FundingSourceSupportInfoFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'providerType' } },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceType' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FundingSourceSupportInfoFragment, unknown>
export const VirtualCardsConfigFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'VirtualCardsConfig' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'VirtualCardsConfig' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxFundingSourceVelocity' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxFundingSourceFailureVelocity' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxCardCreationVelocity' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxTransactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxTransactionAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
                { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'virtualCardCurrencies' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'fundingSourceSupportInfo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: {
              kind: 'Name',
              value: 'bankAccountFundingSourceExpendableEnabled',
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'fundingSourceClientConfiguration' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'clientApplicationsConfiguration' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'providerType' } },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceType' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<VirtualCardsConfigFragment, unknown>
export const CreatePublicKeyDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'CreatePublicKey' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CreatePublicKeyInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'createPublicKeyForVirtualCards' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PublicKey' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyFormat' } },
          { kind: 'Field', name: { kind: 'Name', value: 'publicKey' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CreatePublicKeyMutation,
  CreatePublicKeyMutationVariables
>
export const SetupFundingSourceDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'SetupFundingSource' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'SetupFundingSourceRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'setupFundingSource' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'ProvisionalFundingSource' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProvisionalFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'ProvisionalFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'provisioningData' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SetupFundingSourceMutation,
  SetupFundingSourceMutationVariables
>
export const CompleteFundingSourceDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'CompleteFundingSource' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CompleteFundingSourceRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'completeFundingSource' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'CreditCardFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'CreditCardFundingSource',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'BankAccountFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'BankAccountFundingSource',
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CompleteFundingSourceMutation,
  CompleteFundingSourceMutationVariables
>
export const RefreshFundingSourceDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'RefreshFundingSource' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'RefreshFundingSourceRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'refreshFundingSource' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'CreditCardFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'CreditCardFundingSource',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'BankAccountFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'BankAccountFundingSource',
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  RefreshFundingSourceMutation,
  RefreshFundingSourceMutationVariables
>
export const CancelFundingSourceDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'CancelFundingSource' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'IdInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelFundingSource' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'CreditCardFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'CreditCardFundingSource',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'BankAccountFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'BankAccountFundingSource',
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CancelFundingSourceMutation,
  CancelFundingSourceMutationVariables
>
export const ProvisionVirtualCardDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'ProvisionVirtualCard' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CardProvisionRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cardProvision' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'ProvisionalCard' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProvisionalCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'ProvisionalCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'clientRefId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'provisioningState' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'card' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedCard' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ProvisionVirtualCardMutation,
  ProvisionVirtualCardMutationVariables
>
export const UpdateVirtualCardDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'UpdateVirtualCard' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CardUpdateRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'updateCard' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCardWithLastTransaction',
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCardWithLastTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'SealedCard' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'lastTransaction' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedTransaction' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  UpdateVirtualCardMutation,
  UpdateVirtualCardMutationVariables
>
export const CancelVirtualCardDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'CancelVirtualCard' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CardCancelRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelCard' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCardWithLastTransaction',
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCardWithLastTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'SealedCard' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'lastTransaction' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedTransaction' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  CancelVirtualCardMutation,
  CancelVirtualCardMutationVariables
>
export const SandboxSetFundingSourceToRequireRefreshDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'SandboxSetFundingSourceToRequireRefresh' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: {
                kind: 'Name',
                value: 'SandboxSetFundingSourceToRequireRefreshRequest',
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: {
              kind: 'Name',
              value: 'sandboxSetFundingSourceToRequireRefresh',
            },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'CreditCardFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'CreditCardFundingSource',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'BankAccountFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'BankAccountFundingSource',
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SandboxSetFundingSourceToRequireRefreshMutation,
  SandboxSetFundingSourceToRequireRefreshMutationVariables
>
export const EnableUserDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'EnableUser' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'EnableUserInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'enableUser' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'success' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<EnableUserMutation, EnableUserMutationVariables>
export const DisableUserDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'DisableUser' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'DisableUserInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'disableUser' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'success' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DisableUserMutation, DisableUserMutationVariables>
export const GetVirtualCardsConfigDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetVirtualCardsConfig' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getVirtualCardsConfig' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'VirtualCardsConfig' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'providerType' } },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceType' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'FundingSourceSupportDetail' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'VirtualCardsConfig' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'VirtualCardsConfig' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxFundingSourceVelocity' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxFundingSourceFailureVelocity' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxCardCreationVelocity' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxTransactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'maxTransactionAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
                { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'virtualCardCurrencies' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'fundingSourceSupportInfo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'FundingSourceSupportInfo' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: {
              kind: 'Name',
              value: 'bankAccountFundingSourceExpendableEnabled',
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'fundingSourceClientConfiguration' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'clientApplicationsConfiguration' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetVirtualCardsConfigQuery,
  GetVirtualCardsConfigQueryVariables
>
export const GetPublicKeyDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetPublicKey' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'keyId' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'keyFormats' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'KeyFormat' },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getPublicKeyForVirtualCards' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'keyId' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'keyId' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'keyFormats' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'keyFormats' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PublicKey' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyFormat' } },
          { kind: 'Field', name: { kind: 'Name', value: 'publicKey' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetPublicKeyQuery, GetPublicKeyQueryVariables>
export const GetPublicKeysDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetPublicKeys' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getPublicKeysForVirtualCards' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PaginatedPublicKey' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyFormat' } },
          { kind: 'Field', name: { kind: 'Name', value: 'publicKey' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PaginatedPublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PaginatedPublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'items' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PublicKey' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetPublicKeysQuery, GetPublicKeysQueryVariables>
export const GetKeyRingDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetKeyRing' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'keyRingId' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'keyFormats' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'KeyFormat' },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getKeyRingForVirtualCards' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'keyRingId' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'keyRingId' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'keyFormats' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'keyFormats' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PaginatedPublicKey' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyFormat' } },
          { kind: 'Field', name: { kind: 'Name', value: 'publicKey' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'PaginatedPublicKey' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'PaginatedPublicKey' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'items' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'PublicKey' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetKeyRingQuery, GetKeyRingQueryVariables>
export const GetFundingSourceClientConfigurationDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetFundingSourceClientConfiguration' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: {
              kind: 'Name',
              value: 'getFundingSourceClientConfiguration',
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetFundingSourceClientConfigurationQuery,
  GetFundingSourceClientConfigurationQueryVariables
>
export const GetFundingSourceDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetFundingSource' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'id' } },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getFundingSource' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'id' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'id' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'CreditCardFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'CreditCardFundingSource',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'BankAccountFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'BankAccountFundingSource',
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetFundingSourceQuery,
  GetFundingSourceQueryVariables
>
export const ListFundingSourcesDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ListFundingSources' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'listFundingSources' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'InlineFragment',
                        typeCondition: {
                          kind: 'NamedType',
                          name: {
                            kind: 'Name',
                            value: 'CreditCardFundingSource',
                          },
                        },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: {
                                kind: 'Name',
                                value: 'CreditCardFundingSource',
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'InlineFragment',
                        typeCondition: {
                          kind: 'NamedType',
                          name: {
                            kind: 'Name',
                            value: 'BankAccountFundingSource',
                          },
                        },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: {
                                kind: 'Name',
                                value: 'BankAccountFundingSource',
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListFundingSourcesQuery,
  ListFundingSourcesQueryVariables
>
export const GetProvisionalCardDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetProvisionalCard' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'id' } },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getProvisionalCard' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'id' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'id' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'ProvisionalCard' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProvisionalCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'ProvisionalCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'clientRefId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'provisioningState' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'card' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedCard' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetProvisionalCardQuery,
  GetProvisionalCardQueryVariables
>
export const ListProvisionalCardsDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ListProvisionalCards' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'listProvisionalCards' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: { kind: 'Name', value: 'ProvisionalCard' },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProvisionalCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'ProvisionalCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'clientRefId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'provisioningState' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'card' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedCard' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListProvisionalCardsQuery,
  ListProvisionalCardsQueryVariables
>
export const GetCardDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetCard' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'id' } },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'keyId' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getCard' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'id' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'id' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'keyId' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'keyId' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCardWithLastTransaction',
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCardWithLastTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'SealedCard' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'lastTransaction' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedTransaction' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetCardQuery, GetCardQueryVariables>
export const ListCardsDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ListCards' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'listCards' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCardWithLastTransaction',
                        },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Owner' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'Owner' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'issuer' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAddressAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAddressAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine1' } },
          { kind: 'Field', name: { kind: 'Name', value: 'addressLine2' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postalCode' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedExpiryAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'mm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'yyyy' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCard' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyRingId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'owners' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Owner' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'fundingSourceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'activeToEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'cancelledAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardHolder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'alias' } },
          { kind: 'Field', name: { kind: 'Name', value: 'pan' } },
          { kind: 'Field', name: { kind: 'Name', value: 'csc' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billingAddress' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAddressAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'expiry' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedExpiryAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'metadata' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCardWithLastTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCard' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'SealedCard' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'lastTransaction' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedTransaction' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ListCardsQuery, ListCardsQueryVariables>
export const GetTransactionDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetTransaction' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'id' } },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'keyId' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'getTransaction' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'id' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'id' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'keyId' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'keyId' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedTransaction' },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetTransactionQuery, GetTransactionQueryVariables>
export const ListTransactionsDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ListTransactions' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'dateRange' },
          },
          type: {
            kind: 'NamedType',
            name: { kind: 'Name', value: 'DateRangeInput' },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'sortOrder' },
          },
          type: {
            kind: 'NamedType',
            name: { kind: 'Name', value: 'SortOrder' },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'listTransactions2' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'dateRange' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'dateRange' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'sortOrder' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'sortOrder' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: { kind: 'Name', value: 'SealedTransaction' },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListTransactionsQuery,
  ListTransactionsQueryVariables
>
export const ListTransactionsByCardIdDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ListTransactionsByCardId' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'cardId' },
          },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'dateRange' },
          },
          type: {
            kind: 'NamedType',
            name: { kind: 'Name', value: 'DateRangeInput' },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'sortOrder' },
          },
          type: {
            kind: 'NamedType',
            name: { kind: 'Name', value: 'SortOrder' },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'listTransactionsByCardId2' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'cardId' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'cardId' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'dateRange' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'dateRange' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'sortOrder' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'sortOrder' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: { kind: 'Name', value: 'SealedTransaction' },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListTransactionsByCardIdQuery,
  ListTransactionsByCardIdQueryVariables
>
export const ListTransactionsByCardIdAndTypeDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ListTransactionsByCardIdAndType' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'cardId' },
          },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'transactionType' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'TransactionType' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'nextToken' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'listTransactionsByCardIdAndType' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'cardId' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'cardId' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'transactionType' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'transactionType' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'nextToken' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'nextToken' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: { kind: 'Name', value: 'SealedTransaction' },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'nextToken' } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedCurrencyAmountAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          { kind: 'Field', name: { kind: 'Name', value: 'amount' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedTransaction' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedTransaction' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sortDateEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sequenceId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAtEpochMs' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'settledAtEpochMs' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'billedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactedAmount' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: {
                    kind: 'Name',
                    value: 'SealedCurrencyAmountAttribute',
                  },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'description' } },
          { kind: 'Field', name: { kind: 'Name', value: 'declineReason' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'detail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'virtualCardAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markup' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'percent' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'flat' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'minCharge' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'markupAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceAmount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'SealedCurrencyAmountAttribute',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'fundingSourceId' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                { kind: 'Field', name: { kind: 'Name', value: 'state' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'continuationOfExistingCharge' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  ListTransactionsByCardIdAndTypeQuery,
  ListTransactionsByCardIdAndTypeQueryVariables
>
export const SandboxGetPlaidDataDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'SandboxGetPlaidData' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'SandboxGetPlaidDataRequest' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sandboxGetPlaidData' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'accountMetadata' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'accountId' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'subtype' },
                      },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'publicToken' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  SandboxGetPlaidDataQuery,
  SandboxGetPlaidDataQueryVariables
>
export const OnFundingSourceUpdateDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'subscription',
      name: { kind: 'Name', value: 'OnFundingSourceUpdate' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'owner' },
          },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'ID' } },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'onFundingSourceUpdate' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'owner' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'owner' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'CreditCardFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'CreditCardFundingSource',
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'BankAccountFundingSource' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'FragmentSpread',
                        name: {
                          kind: 'Name',
                          value: 'BankAccountFundingSource',
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SealedAttribute' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'SealedAttribute' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
          { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
          { kind: 'Field', name: { kind: 'Name', value: 'plainTextType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'base64EncodedSealedData' },
          },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CreditCardFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'CreditCardFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          { kind: 'Field', name: { kind: 'Name', value: 'network' } },
          { kind: 'Field', name: { kind: 'Name', value: 'cardType' } },
        ],
      },
    },
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BankAccountFundingSource' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'BankAccountFundingSource' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'owner' } },
          { kind: 'Field', name: { kind: 'Name', value: 'version' } },
          { kind: 'Field', name: { kind: 'Name', value: 'createdAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'updatedAtEpochMs' } },
          { kind: 'Field', name: { kind: 'Name', value: 'state' } },
          { kind: 'Field', name: { kind: 'Name', value: 'currency' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'transactionVelocity' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'maximum' } },
                { kind: 'Field', name: { kind: 'Name', value: 'velocity' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'bankAccountType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'authorization' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'language' } },
                { kind: 'Field', name: { kind: 'Name', value: 'content' } },
                { kind: 'Field', name: { kind: 'Name', value: 'contentType' } },
                { kind: 'Field', name: { kind: 'Name', value: 'signature' } },
                { kind: 'Field', name: { kind: 'Name', value: 'keyId' } },
                { kind: 'Field', name: { kind: 'Name', value: 'algorithm' } },
                { kind: 'Field', name: { kind: 'Name', value: 'data' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'last4' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionName' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'institutionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SealedAttribute' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  OnFundingSourceUpdateSubscription,
  OnFundingSourceUpdateSubscriptionVariables
>
